# Use bash as default shell
set -g default-shell "/bin/bash"
set -s default-terminal "xterm"

# Number windows starting from 1
set -g base-index 1
setw -g pane-base-index 1

set -g display-panes-time 6000
set -g display-time 6000

set -sg repeat-time 100

# Allow vim to notice when a file changes on disk
set -g focus-events on

# Faster key repetition, also fixes neovim running inside tmux
set -s escape-time 10

# Constrain window size based on client connected to the same window
setw -g aggressive-resize on

setw -q -g utf8 off

set -sg automatic-rename on

# Monitor activity
setw -g monitor-activity on
set -g visual-activity on

setw -g mouse off
setw -g xterm-keys on

set -g history-limit 30000

# Window coloring, also highlight current selected windows
set -g window-active-style bg=black,fg=white
set -g pane-active-border-style bg=black,fg=brightyellow
set -g window-style bg=white,fg=black
set -g pane-border-style bg=white,fg=brightyellow
# Status bar coloring
set -g window-status-current-style 'fg=white,bold'
set -g status-style "bg=black,fg=white"
set -g status-left " #[fg=brightred]maze #[fg=white]│ #[fg=yellow]#S #[fg=white]│ "
set -g status-left-length 0
set -g status-right "%d%b %Y %H:%M #[fg=black,bg=white] #(/home/maze/.local/shell/space) #[fg=black,bg=yellow]#(/home/maze/.local/shell/#(hostname)/battery --spaced)"
set -g status-right-length 0

bind r source-file ~/.config/tmux/tmux.conf \; display-message "Reloaded TMUX config"

# set -g lock-after-time 300
# set -g lock-command "tmux detach"

set -g visual-activity both

# new splits open with current path
bind v split-window -c "#{pane_current_path}" -v
bind h split-window -c "#{pane_current_path}" -h
unbind '%'
unbind '"'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
in_nvim="ps -t '#{pane_tty}' | grep nvim"
bind p display-message "#{pane_tty}"
# bind Left  if-shell "$is_vim" { send-keys C-h } { select-pane -L }
# bind Down  if-shell "$is_vim" { send-keys C-j } { select-pane -D }
# bind Up    if-shell "$is_vim" { send-keys C-k } { select-pane -U }
# bind Right if-shell "$is_vim" { send-keys C-l } { select-pane -R }
# bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind -T copy-mode-vi C-h select-pane -L
# bind -T copy-mode-vi C-j select-pane -D
# bind -T copy-mode-vi C-k select-pane -U
# bind -T copy-mode-vi C-l select-pane -R
# bind -T copy-mode-vi 'C-\' select-pane -l

set -g status-interval 15
set -g automatic-rename on
set -g automatic-rename-format "#{?#{==:#{pane_current_command},bash},#{b:pane_current_path},#{pane_current_command}}"
